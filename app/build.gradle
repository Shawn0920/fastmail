apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
//        applicationId com.shawn
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "versionCode"

//        ndk{
//            abiFilters "armeabi ","armeabi-v7a"
//        }
    }
    signingConfigs {
        config {
            keyAlias "ydy"
            keyPassword "123456"
            storeFile file("../sign/youdiyuan.jks")
            storePassword "123456"
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            minifyEnabled false
            // Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    /**
     * 多渠道打包
     * 1、applicationId      = 软件-包名
     * 2、app_name           = 资源文件string.xml下的，需要建立不同的res目录
     * 3、BASE_SERVER_URL    = 基础服务器地址，在自动创建BuildConfig下
     * 4、APP_File_Provider  = 文件provider，一般是包名+fileprovider命名
     * 5、其他所需要配置的百度Key，极光推送key，友盟key等等...
     * */
    productFlavors {

        //我的APP
        fastmail {
            applicationId "cn.zhongbianli.fastmail"
            versionCode 1
            versionName "1.4"
            resValue "string", "app_name", "优递园"
            buildConfigField "String", "APP_File_Provider", '"com.flavor.fastmail.fileprovider"'
            buildConfigField "String", "BASE_SERVER_URL", '"http://udyserver.zhongbianli.cn/tender/"'
            buildConfigField "String", "BASE_H5_URL", '"http://udyh5.zhongbianli.cn"'
//            buildConfigField "String", "BASE_SERVER_URL", '"http://10.109.0.10:80/"'
//            buildConfigField "String", "BASE_H5_URL", '"http://10.105.1.80:8080"'
            buildConfigField "String", "FILEPROVIDER",'"cn.zhongbianli.fastmail.fileprovider"'
            //manifest里面的值
            manifestPlaceholders = [
                    MTA_CHANNEL_VALUE: "fastmail",
                    FILE_PROVIDER    : "cn.zhongbianli.fastmail.fileprovider",
                    UMENG_APPKEY:"5cdbd80e4ca357942c000e47",
                    UMENG_CHANNEL_VALUE:"ydy1000000"]
        }

        //你的APP
        courier {
            applicationId "cn.zhongbianli.courier"
            versionCode 1
            versionName "1.0"
            resValue "string", "app_name", "快递员"
            buildConfigField "String", "APP_File_Provider", '"com.flavor.courier.fileprovider"'
            buildConfigField "String", "BASE_SERVER_URL", '"http://your/app/"'
            buildConfigField "String", "BASE_H5_URL", '"http://udykd.zhongbianli.cn"'
            buildConfigField "String", "FILEPROVIDER",'"cn.zhongbianli.courier.fileprovider"'
            //manifest里面的值
            manifestPlaceholders = [
                    MTA_CHANNEL_VALUE: "courier",
                    FILE_PROVIDER    : "cn.zhongbianli.courier.fileprovider",
                    UMENG_APPKEY:"5ce24b45570df38d4a001315",
                    UMENG_CHANNEL_VALUE:"ydy5000000"]
        }
    }

    applicationVariants.all {
        variant ->
            variant.outputs.all {
                outputFileName = "${variant.productFlavors[0].name}_v${variant.productFlavors[0].versionName}_${releaseTime()}_${variant.buildType.name}.apk"
            }
    }
}

static def releaseTime() {
    return new Date().format("MMdd_HHmm", TimeZone.getTimeZone("GMT+8"))
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.support["appcompat-v7"]
    implementation rootProject.ext.support["constraint-layout"]
    implementation rootProject.ext.support["design"]
    testImplementation rootProject.ext.support["junit"]
    androidTestImplementation rootProject.ext.support["runner"]
    androidTestImplementation rootProject.ext.support["espresso-core"]

    implementation rootProject.ext.dependencies.butterknife
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]

    implementation 'com.squareup.okhttp3:logging-interceptor:3.5.0'
    implementation 'com.squareup.okhttp3:okhttp:3.2.0'
    implementation 'com.squareup.okio:okio:1.7.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.alibaba:fastjson:1.2.44'
    implementation  'com.umeng.umsdk:analytics:8.0.0'
    implementation  'com.umeng.umsdk:common:2.0.0'
//    api 'com.didichuxing.doraemonkit:doraemonkit:1.1.5'
//    releaseImplementation 'com.didichuxing.doraemonkit:doraemonkit-no-op:1.1.5'

    api project(':zxing')
//    api project(':smartvisionlibrary')
    implementation files('libs/expscannersdk_pr.jar')
}
